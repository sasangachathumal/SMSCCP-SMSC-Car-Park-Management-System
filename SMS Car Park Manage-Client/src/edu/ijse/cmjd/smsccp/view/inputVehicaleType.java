/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package edu.ijse.cmjd.smsccp.view;

import edu.ijse.cmjd.smsccp.serverconnector.ServerConnector;
import edu.ijse.cmjd.smsccp.controller.SectionController;
import edu.ijse.cmjd.smsccp.controller.VehicleTypeController;
import edu.ijse.cmjd.smsccp.model.Section;
import edu.ijse.cmjd.smsccp.model.VehicleType;
import edu.ijse.cmjd.smsccp.validate.Validate;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author U s E râ„¢
 */
public class inputVehicaleType extends javax.swing.JDialog {
    private DefaultTableModel tableModel;
    private InputPlace inputPlace;
    /**
     * Creates new form inputJobRole
     */
    public inputVehicaleType(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inputPlace = (InputPlace) parent;
        tableModel = (DefaultTableModel) tabVehicleTypeinfo.getModel();
        txtSearch.setText("Enter vehicale type to Search in table");
        loadVehicaleTyps();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panMainh = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btExit = new javax.swing.JButton();
        libTitle = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        libSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabVehicleTypeinfo = new javax.swing.JTable();
        libSectionName = new javax.swing.JLabel();
        libInsertDate = new javax.swing.JLabel();
        txtVehicleType = new javax.swing.JTextField();
        txtInsertDate = new javax.swing.JTextField();
        libInput = new javax.swing.JLabel();
        libUpbate = new javax.swing.JLabel();
        libRemove = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        panMainh.setBackground(new java.awt.Color(153, 153, 153));
        panMainh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        panMainh.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );

        panMainh.add(jPanel2);
        jPanel2.setBounds(0, 0, 50, 553);

        btExit.setBackground(new java.awt.Color(153, 0, 0));
        btExit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btExit.setForeground(new java.awt.Color(255, 255, 255));
        btExit.setText("X");
        btExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        panMainh.add(btExit);
        btExit.setBounds(764, 5, 45, 27);

        libTitle.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        libTitle.setForeground(new java.awt.Color(255, 255, 255));
        libTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libTitle.setText("Vehicle Data");
        panMainh.add(libTitle);
        libTitle.setBounds(280, 10, 280, 42);

        txtSearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        panMainh.add(txtSearch);
        txtSearch.setBounds(260, 80, 320, 30);

        libSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search2.png"))); // NOI18N
        libSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                libSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                libSearchMouseExited(evt);
            }
        });
        panMainh.add(libSearch);
        libSearch.setBounds(590, 65, 140, 50);

        tabVehicleTypeinfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vehicle Type", "Insert Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabVehicleTypeinfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabVehicleTypeinfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabVehicleTypeinfo);

        panMainh.add(jScrollPane1);
        jScrollPane1.setBounds(80, 120, 700, 190);

        libSectionName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libSectionName.setForeground(new java.awt.Color(255, 255, 255));
        libSectionName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libSectionName.setText("Vehicle Name : ");
        panMainh.add(libSectionName);
        libSectionName.setBounds(80, 350, 140, 30);

        libInsertDate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libInsertDate.setForeground(new java.awt.Color(255, 255, 255));
        libInsertDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libInsertDate.setText("Insert Date : ");
        panMainh.add(libInsertDate);
        libInsertDate.setBounds(80, 400, 140, 30);

        txtVehicleType.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtVehicleType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleTypeActionPerformed(evt);
            }
        });
        panMainh.add(txtVehicleType);
        txtVehicleType.setBounds(230, 350, 310, 30);

        txtInsertDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtInsertDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsertDateActionPerformed(evt);
            }
        });
        txtInsertDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInsertDateKeyReleased(evt);
            }
        });
        panMainh.add(txtInsertDate);
        txtInsertDate.setBounds(230, 400, 220, 30);

        libInput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Input2.png"))); // NOI18N
        libInput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libInputMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                libInputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                libInputMouseExited(evt);
            }
        });
        panMainh.add(libInput);
        libInput.setBounds(180, 450, 170, 90);

        libUpbate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libUpbate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Update2.png"))); // NOI18N
        libUpbate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libUpbate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libUpbateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                libUpbateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                libUpbateMouseExited(evt);
            }
        });
        panMainh.add(libUpbate);
        libUpbate.setBounds(360, 450, 170, 90);

        libRemove.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Remove2.png"))); // NOI18N
        libRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libRemoveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                libRemoveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                libRemoveMouseExited(evt);
            }
        });
        panMainh.add(libRemove);
        libRemove.setBounds(540, 450, 164, 90);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panMainh, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panMainh, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void libSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libSearchMouseExited
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search2.png")));
    }//GEN-LAST:event_libSearchMouseExited

    private void libSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libSearchMouseEntered
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search1.png")));
    }//GEN-LAST:event_libSearchMouseEntered

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        txtSearch.setText("Enter vehicale type to Search in table");
    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchFocusGained

    private void txtVehicleTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleTypeActionPerformed

    private void txtInsertDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsertDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsertDateActionPerformed

    private void libInputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libInputMouseEntered
        libInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Input1.png")));
    }//GEN-LAST:event_libInputMouseEntered

    private void libInputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libInputMouseExited
        libInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Input2.png")));
    }//GEN-LAST:event_libInputMouseExited

    private void libUpbateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libUpbateMouseEntered
        libUpbate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Update1.png")));
    }//GEN-LAST:event_libUpbateMouseEntered

    private void libUpbateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libUpbateMouseExited
        libUpbate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Update2.png")));
    }//GEN-LAST:event_libUpbateMouseExited

    private void libRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libRemoveMouseEntered
        libRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Remove1.png")));
    }//GEN-LAST:event_libRemoveMouseEntered

    private void libRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libRemoveMouseExited
        libRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Remove2.png")));
    }//GEN-LAST:event_libRemoveMouseExited

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void tabVehicleTypeinfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabVehicleTypeinfoMouseClicked
        reservVehicleType();
    }//GEN-LAST:event_tabVehicleTypeinfoMouseClicked

    private void libInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libInputMouseClicked
        inputVehicleType();
    }//GEN-LAST:event_libInputMouseClicked

    private void libUpbateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libUpbateMouseClicked
        updateVehicleType();
    }//GEN-LAST:event_libUpbateMouseClicked

    private void libRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libRemoveMouseClicked
        removeVehicleType();
    }//GEN-LAST:event_libRemoveMouseClicked

    private void txtInsertDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInsertDateKeyReleased
        Validate.dateValidation(txtSearch);
    }//GEN-LAST:event_txtInsertDateKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputVehicaleType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputVehicaleType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputVehicaleType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputVehicaleType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                inputVehicaleType dialog = new inputVehicaleType(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel libInput;
    private javax.swing.JLabel libInsertDate;
    private javax.swing.JLabel libRemove;
    private javax.swing.JLabel libSearch;
    private javax.swing.JLabel libSectionName;
    private javax.swing.JLabel libTitle;
    private javax.swing.JLabel libUpbate;
    private javax.swing.JPanel panMainh;
    private javax.swing.JTable tabVehicleTypeinfo;
    private javax.swing.JTextField txtInsertDate;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtVehicleType;
    // End of variables declaration//GEN-END:variables

    private void loadVehicaleTyps() {
        try {
            VehicleTypeController vehicleTypeController = ServerConnector.getServerConnector().getVehicleTypeController();
            ArrayList<VehicleType> allVehicleType = vehicleTypeController.getAllVehicleType();
            tableModel.setRowCount(0);
            if (!allVehicleType.isEmpty()) {
                for (VehicleType vehicleType : allVehicleType) {
                    Object[] row = {vehicleType.getVehicleType(), vehicleType.getDate()};
                    tableModel.addRow(row);
                }
            } else {
                Object[] row = {"No Vehical type" , "No Vehical type"};
                tableModel.addRow(row);
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(inputVehicaleType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void reservVehicleType() {
        try {
            int selectedRow = tabVehicleTypeinfo.getSelectedRow();
            String vehicletype = String.valueOf(tabVehicleTypeinfo.getValueAt(selectedRow, 0));
            VehicleTypeController vehicleTypeController = ServerConnector.getServerConnector().getVehicleTypeController();
            boolean releaseVehicaleType = vehicleTypeController.releaseVehicaleType(txtVehicleType.getText());
            if (releaseVehicaleType) {
                boolean reserveVehicaleType = vehicleTypeController.reserveVehicaleType(vehicletype);
                if (reserveVehicaleType) {
                    VehicleType searchVehicleType = vehicleTypeController.searchVehicleType(vehicletype);
                    if (searchVehicleType != null) {
                        txtVehicleType.setText(searchVehicleType.getVehicleType());
                        txtInsertDate.setText(searchVehicleType.getDate());
                    } else {
                        JOptionPane.showMessageDialog(null, "Error in Vehicle Type Search !!!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error in Vehicle Type Reserve !!!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Error in Vehicle Type Release !!!");
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(inputVehicaleType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inputVehicleType() {
        try {
            VehicleType vehicleType = new VehicleType();
            vehicleType.setVehicleType(txtVehicleType.getText());
            vehicleType.setDate(txtInsertDate.getText());
            VehicleTypeController vehicleTypeController = ServerConnector.getServerConnector().getVehicleTypeController();
            boolean addVehicleType = vehicleTypeController.addVehicleType(vehicleType);
            if (addVehicleType) {
                JOptionPane.showMessageDialog(null, "Vehicle Type Successfully Input !!!");
            } else {
                JOptionPane.showMessageDialog(null, "Vehicle Type Input Fail !!!\n\t Try again !!!");
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(inputVehicaleType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateVehicleType() {
        try {
            VehicleTypeController vehicleTypeController = ServerConnector.getServerConnector().getVehicleTypeController();
            VehicleType vehicleType = new VehicleType();
            vehicleType.setVehicleType(txtVehicleType.getText());
            vehicleType.setDate(txtInsertDate.getText());
            boolean updateVehicleType = vehicleTypeController.updateVehicleType(vehicleType);
            if (updateVehicleType) {
                JOptionPane.showMessageDialog(null, "Vehicle Type Successfully update !!!");
            } else {
                JOptionPane.showMessageDialog(null, "Vehicle Type update fail !!!");
            }
            vehicleTypeController.releaseVehicaleType(txtVehicleType.getText());
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(inputVehicaleType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void removeVehicleType() {
        try {
            VehicleTypeController vehicleTypeController = ServerConnector.getServerConnector().getVehicleTypeController();
            SectionController sectionController = ServerConnector.getServerConnector().getSectionController();
            boolean deleteVehicleType = vehicleTypeController.deleteVehicleType(txtVehicleType.getText());
            if (deleteVehicleType) {
                JOptionPane.showMessageDialog(null, "Vehicle Type Successfully Remove !!!");
            } else {
                JOptionPane.showMessageDialog(null, "Vehicle Type Remove fail !!!");
            }
            sectionController.releaseSection(txtVehicleType.getText());
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(inputVehicaleType.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setMessageForNewVehicleType(String message) {
        inputPlace.loadVehicleTypes();
    }
}
