/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.cmjd.smsccp.view;

import edu.ijse.cmjd.smsccp.serverconnector.ServerConnector;
import edu.ijse.cmjd.smsccp.controller.CustomerController;
import edu.ijse.cmjd.smsccp.controller.CustomerParkingController;
import edu.ijse.cmjd.smsccp.model.Customer;
import edu.ijse.cmjd.smsccp.model.CustomerParking;
import edu.ijse.cmjd.smsccp.observers.impl.CustomerObserverImpl;
import edu.ijse.cmjd.smsccp.observers.impl.CustomerParkingObserverImpl;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class DataView extends javax.swing.JFrame {
    private CustomerObserverImpl customerObserverImpl;
    private CustomerParkingObserverImpl parkingObserverImpl;
    DefaultTableModel tableModel;
    /**
     * Creates new form DataView
     */
    public DataView() {
        initComponents();
        setLocationRelativeTo(null);
        setAsObserver();
        tableModel = (DefaultTableModel) tableReserveInfo.getModel();
        setDate();
        loadCustomerParking();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panMain = new javax.swing.JPanel();
        panReservInfo = new javax.swing.JPanel();
        scrollReservInfo = new javax.swing.JScrollPane();
        tableReserveInfo = new javax.swing.JTable();
        panCusromerInfo = new javax.swing.JPanel();
        scrollCustomerInfo = new javax.swing.JScrollPane();
        tableCustomerInfo = new javax.swing.JTable();
        libTitle = new javax.swing.JLabel();
        btExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        libDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panMain.setBackground(new java.awt.Color(153, 153, 153));
        panMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        panMain.setMaximumSize(new java.awt.Dimension(876, 503));
        panMain.setMinimumSize(new java.awt.Dimension(876, 503));
        panMain.setLayout(null);

        panReservInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Park Reservation info", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        panReservInfo.setOpaque(false);
        panReservInfo.setLayout(null);

        scrollReservInfo.setBackground(new java.awt.Color(153, 153, 153));

        tableReserveInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Place ID", "Customer NIC", "Arrival Time"
            }
        ));
        tableReserveInfo.setGridColor(new java.awt.Color(51, 51, 51));
        tableReserveInfo.setOpaque(false);
        tableReserveInfo.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tableReserveInfo.setSelectionForeground(new java.awt.Color(0, 153, 204));
        tableReserveInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableReserveInfoMouseClicked(evt);
            }
        });
        scrollReservInfo.setViewportView(tableReserveInfo);

        panReservInfo.add(scrollReservInfo);
        scrollReservInfo.setBounds(16, 16, 290, 416);

        panMain.add(panReservInfo);
        panReservInfo.setBounds(60, 50, 320, 450);

        panCusromerInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer info", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        panCusromerInfo.setOpaque(false);
        panCusromerInfo.setLayout(null);

        scrollCustomerInfo.setOpaque(false);

        tableCustomerInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer NIC", "Customer Name", "Customer Telephone", "Customer Vehical No"
            }
        ));
        tableCustomerInfo.setOpaque(false);
        scrollCustomerInfo.setViewportView(tableCustomerInfo);
        if (tableCustomerInfo.getColumnModel().getColumnCount() > 0) {
            tableCustomerInfo.getColumnModel().getColumn(0).setResizable(false);
            tableCustomerInfo.getColumnModel().getColumn(1).setResizable(false);
            tableCustomerInfo.getColumnModel().getColumn(2).setResizable(false);
            tableCustomerInfo.getColumnModel().getColumn(3).setResizable(false);
        }

        panCusromerInfo.add(scrollCustomerInfo);
        scrollCustomerInfo.setBounds(16, 16, 500, 416);

        panMain.add(panCusromerInfo);
        panCusromerInfo.setBounds(390, 50, 530, 450);

        libTitle.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        libTitle.setForeground(new java.awt.Color(255, 255, 255));
        libTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libTitle.setText("Today System Details");
        panMain.add(libTitle);
        libTitle.setBounds(270, 0, 440, 40);

        btExit.setBackground(new java.awt.Color(153, 0, 0));
        btExit.setForeground(new java.awt.Color(255, 255, 255));
        btExit.setText("X");
        btExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        panMain.add(btExit);
        btExit.setBounds(884, 5, 42, 26);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 497, Short.MAX_VALUE)
        );

        panMain.add(jPanel1);
        jPanel1.setBounds(0, 0, 50, 503);

        libDate.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        libDate.setForeground(new java.awt.Color(255, 255, 255));
        libDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panMain.add(libDate);
        libDate.setBounds(60, 10, 170, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panMain, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panMain, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void tableReserveInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableReserveInfoMouseClicked
        searchCustomers();
    }//GEN-LAST:event_tableReserveInfoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel libDate;
    private javax.swing.JLabel libTitle;
    private javax.swing.JPanel panCusromerInfo;
    private javax.swing.JPanel panMain;
    private javax.swing.JPanel panReservInfo;
    private javax.swing.JScrollPane scrollCustomerInfo;
    private javax.swing.JScrollPane scrollReservInfo;
    private javax.swing.JTable tableCustomerInfo;
    private javax.swing.JTable tableReserveInfo;
    // End of variables declaration//GEN-END:variables

    public void setnewMessageforCustomer(String message) {
        
    }

    public void setnewCustomer(Customer customer) {
        
    }

    private void setAsObserver() {
        try {
            customerObserverImpl = new CustomerObserverImpl(this);
            parkingObserverImpl = new CustomerParkingObserverImpl(this);
            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            CustomerParkingController customerParkingController = ServerConnector.getServerConnector().getCustomerParkingController();            
            customerController.addCustomerObserver(customerObserverImpl);
            customerParkingController.addCustomerParkingObserver(parkingObserverImpl);
            this.customerObserverImpl = customerObserverImpl;
            this.parkingObserverImpl = parkingObserverImpl;
            
        } catch (RemoteException | NotBoundException | MalformedURLException ex) {
            new ServerNull().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(DataView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setMessageForCustomerParking(String message) {
        loadCustomerParking();
    }

    public void setnewCustomerParking(CustomerParking customerParking) {
        
    }

    private void loadCustomerParking() {
        try {
            CustomerParkingController customerParkingController = ServerConnector.getServerConnector().getCustomerParkingController();
            ArrayList<CustomerParking> allCustomerDalyParking = customerParkingController.getAllCustomerParking();
            tableModel.setRowCount(0);
            for (CustomerParking customerParking : allCustomerDalyParking) {
                if (customerParking.getDate().equals(libDate.getText())) {
                    Object[] row = {customerParking.getPlaceId(), customerParking.getCustomerNIC(), customerParking.getArrivalTime()};
                    tableModel.addRow(row);
                } else {
                }
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(DataView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String format = dateFormat.format(date);
        libDate.setText(format);
    }

    private void searchCustomers() {
        try {
            int selectedRow = tableCustomerInfo.getSelectedRowCount();
            System.out.println(selectedRow);
            if (selectedRow > -1) {
                CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
                String customerNIC = (String) tableModel.getValueAt(selectedRow, 1);
                Customer searchCustomer = customerController.searchCustomer(customerNIC);
                if (searchCustomer != null) {
                    DefaultTableModel model = (DefaultTableModel) tableCustomerInfo.getModel();
                    model.setRowCount(0);
                    Object[] row = {searchCustomer.getCustomerNIC(), searchCustomer.getCustomerName(), searchCustomer.getCustomerTelephone(), searchCustomer.getCustomerVehicalNo()};
                    model.addRow(row);
                } else {
                    System.out.println("search null");
                }
            } else {
                System.out.println("Row count");
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(DataView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
