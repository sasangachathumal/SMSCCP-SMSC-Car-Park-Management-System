/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.cmjd.smsccp.view;

import edu.ijse.cmjd.smsccp.serverconnector.ServerConnector;
import edu.ijse.cmjd.smsccp.controller.CustomerController;
import edu.ijse.cmjd.smsccp.controller.CustomerParkingController;
import edu.ijse.cmjd.smsccp.controller.FixCustomerController;
import edu.ijse.cmjd.smsccp.controller.PlaceController;
import edu.ijse.cmjd.smsccp.model.Customer;
import edu.ijse.cmjd.smsccp.model.CustomerParking;
import edu.ijse.cmjd.smsccp.view.HomePage;
import edu.ijse.cmjd.smsccp.view.ServerNull;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.standard.Severity;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ReleasePlace extends javax.swing.JFrame {
    /**
     * Creates new form ReleasePlace
     */
    public ReleasePlace() {
        initComponents();
        setLocationRelativeTo(null);
        txtCustomerNic.requestFocus();
        setDate();
        setTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panMain = new javax.swing.JPanel();
        libTitle = new javax.swing.JLabel();
        libParkingPlace = new javax.swing.JLabel();
        libCustomerNic = new javax.swing.JLabel();
        libCustomerName = new javax.swing.JLabel();
        libVehicaleNo = new javax.swing.JLabel();
        txtParkingPlace = new javax.swing.JTextField();
        txtCustomerNic = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();
        txtVehicaleNo = new javax.swing.JTextField();
        libRelease = new javax.swing.JLabel();
        btExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        libSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabReservPlaces = new javax.swing.JTable();
        libDate = new javax.swing.JLabel();
        libTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtArrivalTime = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panMain.setBackground(new java.awt.Color(153, 153, 153));
        panMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        panMain.setMaximumSize(new java.awt.Dimension(574, 450));
        panMain.setMinimumSize(new java.awt.Dimension(574, 450));
        panMain.setLayout(null);

        libTitle.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        libTitle.setForeground(new java.awt.Color(255, 255, 255));
        libTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libTitle.setText("Release Your Parking Place");
        panMain.add(libTitle);
        libTitle.setBounds(310, 0, 380, 60);

        libParkingPlace.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libParkingPlace.setForeground(new java.awt.Color(247, 247, 247));
        libParkingPlace.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libParkingPlace.setText("Customer Parking Place  :  ");
        panMain.add(libParkingPlace);
        libParkingPlace.setBounds(90, 490, 200, 30);

        libCustomerNic.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libCustomerNic.setForeground(new java.awt.Color(247, 247, 247));
        libCustomerNic.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libCustomerNic.setText("Customer NIC  :  ");
        panMain.add(libCustomerNic);
        libCustomerNic.setBounds(150, 90, 200, 30);

        libCustomerName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libCustomerName.setForeground(new java.awt.Color(247, 247, 247));
        libCustomerName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libCustomerName.setText("Customer Name  :  ");
        panMain.add(libCustomerName);
        libCustomerName.setBounds(90, 340, 200, 30);

        libVehicaleNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        libVehicaleNo.setForeground(new java.awt.Color(247, 247, 247));
        libVehicaleNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        libVehicaleNo.setText("Customer Vehicale No  :  ");
        panMain.add(libVehicaleNo);
        libVehicaleNo.setBounds(90, 390, 200, 30);

        txtParkingPlace.setEditable(false);
        txtParkingPlace.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtParkingPlace.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtParkingPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParkingPlaceActionPerformed(evt);
            }
        });
        panMain.add(txtParkingPlace);
        txtParkingPlace.setBounds(300, 490, 130, 30);

        txtCustomerNic.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCustomerNic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCustomerNic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNicActionPerformed(evt);
            }
        });
        panMain.add(txtCustomerNic);
        txtCustomerNic.setBounds(360, 90, 190, 30);

        txtCustomerName.setEditable(false);
        txtCustomerName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtCustomerName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panMain.add(txtCustomerName);
        txtCustomerName.setBounds(300, 340, 280, 30);

        txtVehicaleNo.setEditable(false);
        txtVehicaleNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtVehicaleNo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panMain.add(txtVehicaleNo);
        txtVehicaleNo.setBounds(300, 390, 280, 30);

        libRelease.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libRelease.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/release2.png"))); // NOI18N
        libRelease.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libRelease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libReleaseMouseClicked(evt);
            }
        });
        panMain.add(libRelease);
        libRelease.setBounds(730, 450, 180, 90);

        btExit.setBackground(new java.awt.Color(153, 0, 0));
        btExit.setForeground(new java.awt.Color(255, 255, 255));
        btExit.setText("X");
        btExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        panMain.add(btExit);
        btExit.setBounds(868, 5, 42, 26);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 541, Short.MAX_VALUE)
        );

        panMain.add(jPanel1);
        jPanel1.setBounds(0, 0, 50, 547);

        libSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search2.png"))); // NOI18N
        libSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        libSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                libSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                libSearchMouseExited(evt);
            }
        });
        panMain.add(libSearch);
        libSearch.setBounds(550, 70, 140, 49);

        tabReservPlaces.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Vehicle No", "Parking Place", "Arrival Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabReservPlaces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabReservPlacesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabReservPlaces);

        panMain.add(jScrollPane1);
        jScrollPane1.setBounds(90, 130, 770, 180);

        libDate.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        libDate.setForeground(new java.awt.Color(255, 255, 255));
        libDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panMain.add(libDate);
        libDate.setBounds(60, 10, 170, 30);

        libTime.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        libTime.setForeground(new java.awt.Color(255, 255, 255));
        libTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        libTime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        panMain.add(libTime);
        libTime.setBounds(60, 50, 170, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Customer Arrival Time  :  ");
        panMain.add(jLabel1);
        jLabel1.setBounds(80, 440, 210, 30);

        txtArrivalTime.setEditable(false);
        txtArrivalTime.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panMain.add(txtArrivalTime);
        txtArrivalTime.setBounds(300, 440, 230, 30);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panMain.add(jButton1);
        jButton1.setBounds(660, 360, 81, 26);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        panMain.add(jButton2);
        jButton2.setBounds(660, 400, 81, 26);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panMain, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panMain, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btExitActionPerformed

    private void txtParkingPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParkingPlaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParkingPlaceActionPerformed

    private void libSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libSearchMouseExited
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search2.png")));
    }//GEN-LAST:event_libSearchMouseExited

    private void libSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libSearchMouseEntered
        libSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/smsccp/img/from/Search1.png")));
    }//GEN-LAST:event_libSearchMouseEntered

    private void txtCustomerNicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNicActionPerformed

    }//GEN-LAST:event_txtCustomerNicActionPerformed

    private void libSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libSearchMouseClicked
        searchParking();
    }//GEN-LAST:event_libSearchMouseClicked

    private void tabReservPlacesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabReservPlacesMouseClicked
        setValuesToTextFields();
    }//GEN-LAST:event_tabReservPlacesMouseClicked

    private void libReleaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libReleaseMouseClicked
        releasePlace();
    }//GEN-LAST:event_libReleaseMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            boolean reservePlace = ServerConnector.getServerConnector().getPlaceController().reservePlace("P001");
            if (reservePlace) {
                System.out.println("done");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            boolean reservePlace = ServerConnector.getServerConnector().getPlaceController().releasePlace("P001");
            if (reservePlace) {
                System.out.println("done1111");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReleasePlace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReleasePlace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReleasePlace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReleasePlace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReleasePlace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel libCustomerName;
    private javax.swing.JLabel libCustomerNic;
    private javax.swing.JLabel libDate;
    private javax.swing.JLabel libParkingPlace;
    private javax.swing.JLabel libRelease;
    private javax.swing.JLabel libSearch;
    private javax.swing.JLabel libTime;
    private javax.swing.JLabel libTitle;
    private javax.swing.JLabel libVehicaleNo;
    private javax.swing.JPanel panMain;
    private javax.swing.JTable tabReservPlaces;
    private javax.swing.JTextField txtArrivalTime;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerNic;
    private javax.swing.JTextField txtParkingPlace;
    private javax.swing.JTextField txtVehicaleNo;
    // End of variables declaration//GEN-END:variables

    private void searchParking() {
        try {
            CustomerParkingController customerParkingController = ServerConnector.getServerConnector().getCustomerParkingController();
            CustomerController customerController = ServerConnector.getServerConnector().getCustomerController();
            ArrayList<CustomerParking> searchCustomerParking = customerParkingController.searchCustomerParking(txtCustomerNic.getText(), libDate.getText());
            DefaultTableModel tableModel = (DefaultTableModel) tabReservPlaces.getModel();
            tableModel.setRowCount(0);
            for (CustomerParking customerParking : searchCustomerParking) {
                Customer searchCustomer = customerController.searchCustomer(txtCustomerNic.getText());
                System.out.println("12");
                if (searchCustomer != null) {
                    Object[] row = {searchCustomer.getCustomerName(), searchCustomer.getCustomerVehicalNo(), customerParking.getPlaceId(), customerParking.getArrivalTime()};
                    tableModel.addRow(row);
                }
                System.out.println("34");
            }

        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        Date date = new Date();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String date1 = format.format(date);
        libDate.setText(date1);
    }

    private void setTime() {
        new Thread() {
            public void run() {
                while (true) {
                    Date date = new Date();
                    SimpleDateFormat format = new SimpleDateFormat("hh:mm:ss");
                    String date1 = format.format(date);
                    libTime.setText(date1);
                }
            }
        }.start();
    }

    private void setValuesToTextFields() {
        int selectedRow = tabReservPlaces.getSelectedRow();
        String Name = String.valueOf(tabReservPlaces.getValueAt(selectedRow, 0));
        String vehicleNo = String.valueOf(tabReservPlaces.getValueAt(selectedRow, 1));
        String PlaceID = String.valueOf(tabReservPlaces.getValueAt(selectedRow, 2));
        String arrivalTime = String.valueOf(tabReservPlaces.getValueAt(selectedRow, 3));
        
        txtCustomerName.setText(Name);
        txtVehicaleNo.setText(vehicleNo);
        txtParkingPlace.setText(PlaceID);
        txtArrivalTime.setText(arrivalTime);
    }

    private void releasePlace() {
        try {
            CustomerParkingController customerParkingController = ServerConnector.getServerConnector().getCustomerParkingController();
            PlaceController placeController = ServerConnector.getServerConnector().getPlaceController();
            CustomerParking customerParking = new CustomerParking(txtParkingPlace.getText(), txtCustomerNic.getText(), libDate.getText(), txtArrivalTime.getText(), libTime.getText());
            boolean updateCustomerParking = customerParkingController.updateCustomerParking(customerParking);
            if (updateCustomerParking) {
                boolean deleteCustomerParking = customerParkingController.deleteCustomerParking(txtParkingPlace.getText(), txtCustomerNic.getText(), libDate.getText());
                if (deleteCustomerParking) {
                    boolean releasePlace = placeController.releasePlace(txtParkingPlace.getText());
                    if (releasePlace) {
                        JOptionPane.showMessageDialog(null, "Place release Success !!!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Place release Failaaaaaaaaaaa !!!");
                    }
                    new HomePage().setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Place release Fail !!!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Place release Fail !!!");
            }
            
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            new ServerNull().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(ReleasePlace.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
